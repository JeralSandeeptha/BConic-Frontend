version: '3.8'

services:
  frontend:
    container_name: bconic_frontend_container
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_BASE_URL=http://localhost:5000/api/v1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    stdin_open: true
    tty: true
    depends_on:
      - backend
  jenkins:
    image: jenkins/jenkins:latest
    container_name: bconic_jenkins_container
    privileged: true
    restart: always
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./docker_volumes/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  sonarqube:
    image: sonarqube:latest
    container_name: bconic_sonarqube_container
    restart: always
    depends_on:
      - sonarqube_db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./docker_volumes/sonarqube/sonarqube_data:/opt/sonarqube/data
      - ./docker_volumes/sonarqube/sonarqube_logs:/opt/sonarqube/logs
      - ./docker_volumes/sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
  sonarqube_db:
    image: postgres:13
    container_name: bconic_sonarqube_db_container
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - ./docker_volumes/postgres_sonarqube:/var/lib/postgresql/data