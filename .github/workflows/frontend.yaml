name: BConic Frontend CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Clean Workspace
      - name: Clean workspace
        run: |
          echo "========Executing Clean Workspace========"
          rm -rf *

      # Checkout SCM
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: main
        
      # Verify Tools
      - name: Verify tools
        run: |
          echo "========Verify Tools========"
          node --version
          npm --version
          git --version

      # Verify Branch
      - name: Verify branch
        run: |
          git branch -a
          git log -1 --oneline

      # Install Dependencies
      - name: Install dependencies
        run: npm ci

      # Unit Testing
      - name: Run unit tests
        run: npm test
      
      # Build Project
      - name: Build project
        run: |
          npm install --save-dev @babel/plugin-proposal-private-property-in-object
          npx update-browserslist-db@latest
          npm run build

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t jeralsandeeptha/bconic-frontend:${{ github.sha }} .

      # Push Docker Image
      - name: Push Docker Image
        run: |
          docker push jeralsandeeptha/bconic-frontend:${{ github.sha }}

      # Trigger Deployment Workflow
      - name: Trigger Deployment Workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'JeralSandeeptha',
              repo: 'BConic-Kubernates-Deployment',
              workflow_id: 'frontend-deploy.yaml',
              ref: 'main',
              inputs: {
                image_sha: '${{ github.sha }}',
                environment: 'production'
              }
            });
            console.log('Deployment workflow triggered successfully');